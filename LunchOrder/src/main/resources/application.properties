
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
logging.level.org.springframework.web=INFO

#second level cach
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory

###Cache Mode Settings for the Second-Level Cache
### A second-level cache helps improve performance by avoiding expensive database calls, keeping the entity data local to the application.
#Cache Mode Setting-Description
#ALL-All entity data is stored in the second-level cache for this persistence unit.
#NONE-No data is cached in the persistence unit. The persistence provider must not cache any data.
#ENABLE_SELECTIVE-Enable caching for entities that have been explicitly set with the @Cacheable annotation.(true as default)
#DISABLE_SELECTIVE-Enable caching for all entities except those that have been explicitly set with the @Cacheable(false) annotation.
#UNSPECIFIED-The caching behavior for the persistence unit is undefined. The persistence providerâ€™s default caching behavior will be used.
####
#spring.jpa.properties.javax.persistence.sharedCache.mode=ALL
spring.jpa.properties.javax.persistence.sharedCache.mode=ENABLE_SELECTIVE
#MySql
#spring.datasource.url=jdbc:mysql://localhost:3306/tutorial?useUnicode=true&characterEncoding=UTF-8
#spring.datasource.username=root
#spring.datasource.password=
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver